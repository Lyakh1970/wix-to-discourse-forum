#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã WIX —Ñ–æ—Ä—É–º–∞
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ä–∞–∑–≤–µ–¥–∫–∏ –ø–µ—Ä–µ–¥ –ø–æ–ª–Ω—ã–º –ø–∞—Ä—Å–∏–Ω–≥–æ–º
"""

import asyncio
import sys
from pathlib import Path

sys.path.insert(0, str(Path(__file__).parent.parent))

from playwright.async_api import async_playwright
import yaml


async def analyze_forum():
    """–ê–Ω–∞–ª–∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ñ–æ—Ä—É–º–∞"""
    
    print("=" * 80)
    print("–ê–ù–ê–õ–ò–ó –°–¢–†–£–ö–¢–£–†–´ WIX –§–û–†–£–ú–ê")
    print("=" * 80)
    print()
    
    # –ó–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    config_file = Path("config/wix_config.yaml")
    
    if not config_file.exists():
        print("‚ùå –§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        print(f"   –°–æ–∑–¥–∞–π—Ç–µ: {config_file}")
        return
    
    with open(config_file, 'r', encoding='utf-8') as f:
        config = yaml.safe_load(f)
    
    forum_url = config['forum_url']
    
    print(f"üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º: {forum_url}")
    print()
    
    async with async_playwright() as p:
        # –ó–∞–ø—É—Å—Ç–∏—Ç—å –±—Ä–∞—É–∑–µ—Ä
        browser = await p.chromium.launch(headless=False)  # –í–∏–¥–∏–º—ã–π —Ä–µ–∂–∏–º –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
        context = await browser.new_context()
        page = await context.new_page()
        
        try:
            # –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ñ–æ—Ä—É–º–∞
            print("üìÑ –ó–∞–≥—Ä—É–∑–∫–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...")
            await page.goto(forum_url, wait_until='networkidle')
            print("‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
            print()
            
            # –ü–æ–ª—É—á–∏—Ç—å –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            title = await page.title()
            print(f"üìå –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {title}")
            print()
            
            # –ê–Ω–∞–ª–∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
            print("üîé –ü–æ–∏—Å–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π...")
            print()
            
            # –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –Ω–∞–π—Ç–∏ —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã
            selectors_to_try = [
                "a[href*='category']",
                "div[class*='category']",
                "div[class*='subcategory']",
                "[data-hook*='category']",
                ".category-item",
                ".subcategory-item",
            ]
            
            for selector in selectors_to_try:
                try:
                    elements = await page.query_selector_all(selector)
                    if elements:
                        print(f"  ‚úì –ù–∞–π–¥–µ–Ω–æ {len(elements)} —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–ª—è: {selector}")
                        
                        # –ü–æ–∫–∞–∑–∞—Ç—å –ø–µ—Ä–≤—ã–µ 3 —ç–ª–µ–º–µ–Ω—Ç–∞
                        for i, elem in enumerate(elements[:3]):
                            try:
                                text = await elem.inner_text()
                                text = text.strip()[:100]  # –ü–µ—Ä–≤—ã–µ 100 —Å–∏–º–≤–æ–ª–æ–≤
                                print(f"    [{i+1}] {text}")
                            except:
                                pass
                        print()
                except Exception as e:
                    continue
            
            # –ê–Ω–∞–ª–∏–∑ —Å—Å—ã–ª–æ–∫ –Ω–∞ –ø–æ–¥—Ä–∞–∑–¥–µ–ª—ã
            print("üîó –ê–Ω–∞–ª–∏–∑ —Å—Å—ã–ª–æ–∫...")
            print()
            
            all_links = await page.query_selector_all('a[href]')
            
            forum_links = []
            for link in all_links:
                href = await link.get_attribute('href')
                if href and 'forum' in href.lower():
                    text = await link.inner_text()
                    forum_links.append({
                        'text': text.strip()[:80],
                        'href': href
                    })
            
            # –£–±—Ä–∞—Ç—å –¥—É–±–ª–∏–∫–∞—Ç—ã
            unique_links = {link['href']: link for link in forum_links}
            
            print(f"  üìä –ù–∞–π–¥–µ–Ω–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Å—Å—ã–ª–æ–∫ —Ñ–æ—Ä—É–º–∞: {len(unique_links)}")
            print()
            
            # –ü–æ–∫–∞–∑–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–∏–º–µ—Ä–æ–≤
            print("  –ü—Ä–∏–º–µ—Ä—ã —Å—Å—ã–ª–æ–∫:")
            for i, (href, link) in enumerate(list(unique_links.items())[:10]):
                print(f"    [{i+1}] {link['text']}")
                print(f"        ‚Üí {href[:100]}")
            print()
            
            # –ê–Ω–∞–ª–∏–∑ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å –∫–ª–∞—Å—Å–æ–º PaFuZ (–≤–ª–æ–∂–µ–Ω–∏—è)
            print("üìé –ü–æ–∏—Å–∫ –≤–ª–æ–∂–µ–Ω–∏–π (–∫–ª–∞—Å—Å PaFuZ)...")
            print()
            
            attachments = await page.query_selector_all('a.PaFuZ')
            if attachments:
                print(f"  ‚úì –ù–∞–π–¥–µ–Ω–æ –≤–ª–æ–∂–µ–Ω–∏–π: {len(attachments)}")
                
                for i, att in enumerate(attachments[:5]):
                    href = await att.get_attribute('href')
                    text = await att.inner_text()
                    print(f"    [{i+1}] {text}")
                    print(f"        ‚Üí {href}")
                print()
            else:
                print("  ‚ÑπÔ∏è  –í–ª–æ–∂–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ")
                print("     (–æ–Ω–∏ –º–æ–≥—É—Ç –±—ã—Ç—å –≤–Ω—É—Ç—Ä–∏ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤)")
                print()
            
            # HTML —Å—Ç—Ä—É–∫—Ç—É—Ä–∞
            print("üèóÔ∏è  –ê–Ω–∞–ª–∏–∑ HTML —Å—Ç—Ä—É–∫—Ç—É—Ä—ã...")
            print()
            
            html_content = await page.content()
            
            # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
            print(f"  üìè –†–∞–∑–º–µ—Ä HTML: {len(html_content):,} —Å–∏–º–≤–æ–ª–æ–≤")
            print(f"  üî¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—Å–µ—Ö —Å—Å—ã–ª–æ–∫: {len(all_links)}")
            
            # –ü–æ–∏—Å–∫ data-hook –∞—Ç—Ä–∏–±—É—Ç–æ–≤ (WIX —á–∞—Å—Ç–æ –∏—Ö –∏—Å–ø–æ–ª—å–∑—É–µ—Ç)
            import re
            data_hooks = re.findall(r'data-hook=["\']([^"\']+)["\']', html_content)
            unique_hooks = set(data_hooks)
            
            if unique_hooks:
                print(f"  üé£ –ù–∞–π–¥–µ–Ω–æ data-hook –∞—Ç—Ä–∏–±—É—Ç–æ–≤: {len(unique_hooks)}")
                print("     –ü—Ä–∏–º–µ—Ä—ã:")
                for hook in list(unique_hooks)[:10]:
                    print(f"       - {hook}")
            print()
            
            # –°–æ—Ö—Ä–∞–Ω–∏—Ç—å HTML –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
            output_file = Path("data/exported/forum_page_sample.html")
            output_file.parent.mkdir(parents=True, exist_ok=True)
            output_file.write_text(html_content, encoding='utf-8')
            
            print(f"üíæ HTML —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤: {output_file}")
            print()
            
            # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
            print("=" * 80)
            print("üìù –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò")
            print("=" * 80)
            print()
            print("1. –ò–∑—É—á–∏—Ç–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π HTML —Ñ–∞–π–ª –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö —Å–µ–ª–µ–∫—Ç–æ—Ä–æ–≤")
            print("2. –û–±–Ω–æ–≤–∏—Ç–µ config/wix_config.yaml —Å –Ω–∞–π–¥–µ–Ω–Ω—ã–º–∏ —Å–µ–ª–µ–∫—Ç–æ—Ä–∞–º–∏")
            print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —Ç—Ä–µ–±—É–µ—Ç—Å—è –ª–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–æ–Ω—Ç–µ–Ω—Ç—É")
            print("4. –û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—É URL –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º")
            print()
            
            # –ü–∞—É–∑–∞ –ø–µ—Ä–µ–¥ –∑–∞–∫—Ä—ã—Ç–∏–µ–º
            print("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –±—Ä–∞—É–∑–µ—Ä–∞...")
            input()
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ: {e}")
            import traceback
            traceback.print_exc()
            
        finally:
            await browser.close()
    
    print()
    print("‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω")
    print()


if __name__ == "__main__":
    asyncio.run(analyze_forum())

