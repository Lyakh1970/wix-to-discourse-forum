#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø–∞—Ä—Å–µ—Ä–∞ WIX —Ñ–æ—Ä—É–º–∞
"""

import asyncio
import sys
from pathlib import Path

# –î–æ–±–∞–≤–∏—Ç—å —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ PYTHONPATH
sys.path.insert(0, str(Path(__file__).parent.parent))

from parser.wix_parser import WixForumParser


async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("\n" + "=" * 80)
    print("üöÄ –ü–ê–†–°–ï–† WIX –§–û–†–£–ú–ê FISHERY GROUP")
    print("=" * 80)
    print()
    
    # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞–ª–∏—á–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    config_file = Path("config/wix_config.yaml")
    
    if not config_file.exists():
        print("‚ùå –û—à–∏–±–∫–∞: –§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        print(f"   –û–∂–∏–¥–∞–µ—Ç—Å—è: {config_file.absolute()}")
        print()
        print("üìù –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–∏–º–µ—Ä–∞:")
        print("   Windows: Copy-Item config\\wix_config.yaml.example config\\wix_config.yaml")
        print("   Linux/Mac: cp config/wix_config.yaml.example config/wix_config.yaml")
        print()
        return
    
    print("‚úì –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–∞–π–¥–µ–Ω–∞")
    print(f"‚úì –õ–æ–≥–∏ –±—É–¥—É—Ç –∑–∞–ø–∏—Å–∞–Ω—ã –≤: logs/parser.log")
    print()
    
    # –°–æ–∑–¥–∞—Ç—å –ø–∞—Ä—Å–µ—Ä
    parser = WixForumParser(str(config_file))
    
    # –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø–∞—Ä—Å–∏–Ω–≥
    try:
        await parser.run_full_parse()
        
        print()
        print("=" * 80)
        print("‚úÖ –ü–ê–†–°–ò–ù–ì –ó–ê–í–ï–†–®–ï–ù –£–°–ü–ï–®–ù–û!")
        print("=" * 80)
        print()
        print("üìÅ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤:")
        print(f"   {Path('data/exported').absolute()}")
        print()
        print("üìä –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print(f"   ‚úì –ö–∞—Ç–µ–≥–æ—Ä–∏–π:     {parser.stats['categories_parsed']}")
        print(f"   ‚úì –ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π:  {parser.stats['subcategories_parsed']}")
        print(f"   ‚úì –ü–æ—Å—Ç–æ–≤:        {parser.stats['posts_parsed']}")
        print(f"   ‚úì –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤:  {parser.stats['comments_parsed']}")
        print(f"   ‚úì –§–∞–π–ª–æ–≤:        {parser.stats['files_downloaded']}")
        if parser.stats['errors_count'] > 0:
            print(f"   ‚ö† –û—à–∏–±–æ–∫:        {parser.stats['errors_count']}")
        print()
        
    except KeyboardInterrupt:
        print()
        print("=" * 80)
        print("‚ö†Ô∏è  –ü–ê–†–°–ò–ù–ì –ü–†–ï–†–í–ê–ù –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ú")
        print("=" * 80)
        print()
        if hasattr(parser, 'stats'):
            print("üìä –ß–∞—Å—Ç–∏—á–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
            print(f"   –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π:    {parser.stats['categories_parsed']}")
            print(f"   –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π: {parser.stats['subcategories_parsed']}")
            print(f"   –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –ø–æ—Å—Ç–æ–≤:       {parser.stats['posts_parsed']}")
            print()
        
    except Exception as e:
        print()
        print("=" * 80)
        print("‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê")
        print("=" * 80)
        print(f"\n–û—à–∏–±–∫–∞: {e}")
        print()
        print("üìù –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –≤ –ª–æ–≥–µ: logs/parser.log")
        print()
        import traceback
        traceback.print_exc()


if __name__ == "__main__":
    asyncio.run(main())

