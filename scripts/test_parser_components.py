#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –ø–∞—Ä—Å–µ—Ä–∞
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –±–µ–∑ –ø–æ–ª–Ω–æ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥–∞
"""

import asyncio
import sys
from pathlib import Path

sys.path.insert(0, str(Path(__file__).parent.parent))

from parser.wix_parser import WixForumParser
from parser.utils import parse_date, html_to_markdown, extract_wix_attachment_info


async def test_connection():
    """–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Ñ–æ—Ä—É–º—É"""
    print("\n" + "=" * 80)
    print("üîå –¢–ï–°–¢ –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø –ö –§–û–†–£–ú–£")
    print("=" * 80)
    
    parser = WixForumParser()
    
    try:
        await parser.initialize_browser()
        
        print("‚úì –ë—Ä–∞—É–∑–µ—Ä –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        
        # –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        await parser.page.goto(parser.config['forum_url'])
        await parser.page.wait_for_load_state('networkidle')
        
        title = await parser.page.title()
        print(f"‚úì –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞: {title}")
        
        # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å URL
        current_url = parser.page.url
        print(f"‚úì URL: {current_url}")
        
        print("\n‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
    
    finally:
        if parser.browser:
            await parser.browser.close()


async def test_auth():
    """–¢–µ—Å—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"""
    print("\n" + "=" * 80)
    print("üîê –¢–ï–°–¢ –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò")
    print("=" * 80)
    
    parser = WixForumParser()
    
    try:
        await parser.initialize_browser()
        await parser.login()
        
        print("‚úì –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ (–ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏)")
        
        # –ü–∞—É–∑–∞ —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–∏–∑—É–∞–ª—å–Ω–æ
        await parser.page.wait_for_timeout(5000)
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {e}")
    
    finally:
        if parser.browser:
            await parser.browser.close()


async def test_parse_one_category():
    """–¢–µ—Å—Ç –ø–∞—Ä—Å–∏–Ω–≥–∞ –æ–¥–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
    print("\n" + "=" * 80)
    print("üìÇ –¢–ï–°–¢ –ü–ê–†–°–ò–ù–ì–ê –û–î–ù–û–ô –ö–ê–¢–ï–ì–û–†–ò–ò")
    print("=" * 80)
    
    parser = WixForumParser()
    
    try:
        await parser.initialize_browser()
        await parser.login()
        
        # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ª–∏–º–∏—Ç –Ω–∞ 1 –∫–∞—Ç–µ–≥–æ—Ä–∏—é
        parser.config['limits']['max_categories'] = 1
        
        categories = await parser.parse_categories()
        
        print(f"\n‚úì –°–ø–∞—Ä—Å–µ–Ω–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {len(categories)}")
        
        if categories:
            cat = categories[0]
            print(f"\n–ö–∞—Ç–µ–≥–æ—Ä–∏—è 1:")
            print(f"  –ù–∞–∑–≤–∞–Ω–∏–µ: {cat['title']}")
            print(f"  URL: {cat['url']}")
            print(f"  –û–ø–∏—Å–∞–Ω–∏–µ: {cat['description'][:100]}...")
            print(f"  –ü–æ—Å—Ç–æ–≤: {cat['posts_count']}")
        
        print("\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
    
    finally:
        if parser.browser:
            await parser.browser.close()


async def test_parse_one_post():
    """–¢–µ—Å—Ç –ø–∞—Ä—Å–∏–Ω–≥–∞ –æ–¥–Ω–æ–≥–æ –ø–æ—Å—Ç–∞ —Å –≤–ª–æ–∂–µ–Ω–∏—è–º–∏"""
    print("\n" + "=" * 80)
    print("üìù –¢–ï–°–¢ –ü–ê–†–°–ò–ù–ì–ê –û–î–ù–û–ì–û –ü–û–°–¢–ê")
    print("=" * 80)
    
    parser = WixForumParser()
    
    try:
        await parser.initialize_browser()
        await parser.login()
        
        # URL —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ—Å—Ç–∞ (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π)
        test_post_url = "https://www.fisherydb.com/forum/simrad/km-simrad-fs-70-es80-nastroyka-linii-trala-s-tz-fs-70-na-eholot-es-80"
        
        test_post = {
            'id': 'test_post_1',
            'title': 'Test Post',
            'url': test_post_url,
            'attachments': [],
            'comments': []
        }
        
        await parser.parse_post_details(test_post)
        
        print(f"\n‚úì –ü–æ—Å—Ç —Å–ø–∞—Ä—Å–µ–Ω:")
        print(f"  –ó–∞–≥–æ–ª–æ–≤–æ–∫: {test_post['title']}")
        print(f"  –ö–æ–Ω—Ç–µ–Ω—Ç: {len(test_post.get('content', ''))} —Å–∏–º–≤–æ–ª–æ–≤")
        print(f"  –í–ª–æ–∂–µ–Ω–∏–π: {len(test_post['attachments'])}")
        print(f"  –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: {len(test_post['comments'])}")
        
        if test_post['attachments']:
            print(f"\n  –í–ª–æ–∂–µ–Ω–∏—è:")
            for att in test_post['attachments']:
                print(f"    - {att['filename']}")
                print(f"      URL: {att['url']}")
        
        print("\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
    
    finally:
        if parser.browser:
            await parser.browser.close()


def test_utils():
    """–¢–µ—Å—Ç —É—Ç–∏–ª–∏—Ç –ø–∞—Ä—Å–∏–Ω–≥–∞"""
    print("\n" + "=" * 80)
    print("üõ†Ô∏è  –¢–ï–°–¢ –£–¢–ò–õ–ò–¢")
    print("=" * 80)
    
    # –¢–µ—Å—Ç –ø–∞—Ä—Å–∏–Ω–≥–∞ –¥–∞—Ç WIX
    test_dates = [
        "Oct 05",
        "Sep 11",
        "Jun 06",
        "2 hours ago",
        "5 –¥–Ω–µ–π –Ω–∞–∑–∞–¥"
    ]
    
    print("\nüìÖ –¢–µ—Å—Ç –ø–∞—Ä—Å–∏–Ω–≥–∞ –¥–∞—Ç:")
    for date_str in test_dates:
        parsed = parse_date(date_str)
        print(f"  '{date_str}' ‚Üí {parsed}")
    
    # –¢–µ—Å—Ç HTML ‚Üí Markdown
    print("\nüìÑ –¢–µ—Å—Ç HTML ‚Üí Markdown:")
    test_html = "<h1>–ó–∞–≥–æ–ª–æ–≤–æ–∫</h1><p>–¢–µ–∫—Å—Ç —Å <strong>–∂–∏—Ä–Ω—ã–º</strong> –∏ <a href='#'>—Å—Å—ã–ª–∫–æ–π</a></p>"
    markdown = html_to_markdown(test_html)
    print(f"  HTML: {test_html}")
    print(f"  Markdown: {markdown}")
    
    # –¢–µ—Å—Ç –∏–∑–≤–ª–µ—á–µ–Ω–∏—è WIX URL
    print("\nüîó –¢–µ—Å—Ç WIX URL:")
    test_url = "https://abc123.usrfiles.com/ugd/def456_hash/document.pdf"
    info = extract_wix_attachment_info(test_url)
    print(f"  URL: {test_url}")
    print(f"  UUID: {info.get('uuid')}")
    print(f"  Hash: {info.get('hash')}")
    
    print("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã —É—Ç–∏–ª–∏—Ç –ø—Ä–æ–π–¥–µ–Ω—ã!")


async def interactive_menu():
    """–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –º–µ–Ω—é —Ç–µ—Å—Ç–æ–≤"""
    print("\n" + "=" * 80)
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ö–û–ú–ü–û–ù–ï–ù–¢–û–í –ü–ê–†–°–ï–†–ê")
    print("=" * 80)
    print()
    print("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ—Å—Ç:")
    print("  1. –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Ñ–æ—Ä—É–º—É")
    print("  2. –¢–µ—Å—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏")
    print("  3. –¢–µ—Å—Ç –ø–∞—Ä—Å–∏–Ω–≥–∞ –æ–¥–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏")
    print("  4. –¢–µ—Å—Ç –ø–∞—Ä—Å–∏–Ω–≥–∞ –æ–¥–Ω–æ–≥–æ –ø–æ—Å—Ç–∞")
    print("  5. –¢–µ—Å—Ç —É—Ç–∏–ª–∏—Ç (–¥–∞—Ç—ã, markdown, –∏ —Ç.–¥.)")
    print("  0. –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Ç–µ—Å—Ç—ã")
    print()
    
    choice = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ—Å—Ç–∞ (0-5): ").strip()
    
    if choice == "1":
        await test_connection()
    elif choice == "2":
        await test_auth()
    elif choice == "3":
        await test_parse_one_category()
    elif choice == "4":
        await test_parse_one_post()
    elif choice == "5":
        test_utils()
    elif choice == "0":
        await test_connection()
        await test_auth()
        await test_parse_one_category()
        test_utils()
    else:
        print("–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!")


if __name__ == "__main__":
    try:
        asyncio.run(interactive_menu())
    except KeyboardInterrupt:
        print("\n\n‚ö†Ô∏è  –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\n\n‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

